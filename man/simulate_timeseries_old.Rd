% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_timeseries_old.R
\name{simulate_timeseries_old}
\alias{simulate_timeseries_old}
\title{OLD version for the main function. Does not use c++ functions. No
\code{fixation_at} parameter. Accepts \code{growth_rate}.}
\usage{
simulate_timeseries_old(
  counts_data,
  dilution = 8 * 10^(-3),
  no_of_dil = 12,
  abun_total = NULL,
  grow_step = 1,
  keep_all_timesteps = FALSE,
  growth_rate = NULL
)
}
\arguments{
\item{abun_total}{Total abundance for the community to grow in each dilution-growth
cycle. When this value is reached, the cycle ends and another dilution (if needed)
happens. If NULL, \code{abun_total} is set to the initial total abundance}

\item{grow_step}{Number of individuals that grow each timestep (Default: 1)}

\item{keep_all_timesteps}{}

\item{growth_rate}{Indicates the name of an optional column that determines how much a bug
grows. Each time it grows, it won't grow by 1 but by this factor. It
indicates the grow rate in percent mass.
WARNING: It can't be a decimal number because of how the sampling works.
That means the count_data data.table, which includes the growth rates,
must be multiplied by a number that turns all rates into an integer. The
abun_total AND grow_step arguments must be multiplied by this number, too}
}
\value{

}
\description{
OLD version for the main function. Does not use c++ functions. No
\code{fixation_at} parameter. Accepts \code{growth_rate}.
}
